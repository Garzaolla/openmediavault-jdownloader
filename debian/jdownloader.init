#!/bin/sh
### BEGIN INIT INFO
# Provides:          jdownloader
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      NetworkManager
# Should-Stop:       NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Jdownloader daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

#/etc/init.d/jdownloader
SCRIPTNAME=/etc/init.d/jdownloader

# Name of application
NAME="Jdownloader"

# Path to store PID file
PID_PATH=/var/run/jdownloader
PID_FILE=$PID_PATH/jdownloader.pid

# Java Command
JAVA=/usr/bin/java

# Run as user
RUN_AS="jdownloader"

# Jdownloader install location
JD_PATH=/opt/jdownloader
JD_ARGS='-Djava.awt.headless=true -jar JDownloader.jar'

# Check pid path is created,
if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
    chmod 755 $PID_PATH -R
    chown $RUN_AS:users $PID_PATH -R
fi

# Exit if the package is not installed
[ -e "${JD_PATH}/JDownloader.jar" ] || exit 0

# Using the lsb functions to perform the operations.
. /lib/lsb/init-functions

is_alive()
{
   line=$(ps aux | grep [J]Downloader |awk '{print $2}')
   if [ -e $PID_FILE ]; then
       if ! kill -0 $line > /dev/null 2>&1; then
           return 2
        fi
        rm -Rf $PID_FILE > /dev/null 2>&1
        return 0
   else
      if [ -z "$line" ]; then
         return 2
      else
         return 0
      fi
   fi
   return 1
}

do_start()
{
   is_alive
   RETVAL="$?"
   if [ $RETVAL != 0 ]; then
       rm -f $PID_FILE
       CMD="start-stop-daemon --start --background --quiet --pidfile $PID_FILE --make-pidfile \
       --exec $JAVA --chdir /opt/jdownloader --chuid $RUN_AS --user $RUN_AS --umask 0 -- $JD_ARGS"

       eval $CMD
       return $?
   fi

   [ "$RETVAL" = "0" ] && return 2
}

do_stop()
{
   line=$(ps aux | grep [J]Downloader |awk '{print $2}')
   if [ -z "$line" ]; then
      return 3
   else
      kill -9 $line > /dev/null 2>&1
      return 2
   fi
   return 1
}

case "$1" in
  start)
   echo "Starting Jdownloader daemon: " >&2
   do_start;
   case "$?" in
      0|1) echo "Started Jdownloader daemon" >&2
      ;;
      2) echo "Already running" >&2
      ;;
   esac
   ;;
  stop)
   echo "Stopping Jdownloader daemon: " >&2
   do_stop;
   case "$?" in
      0|1) echo "Stopped Jdownloader daemon" >&2
      ;;
      2) echo "Other Stopping Jdownloader daemon: " >&2
      ;;
      *) echo "Not running so not Stopping Jdownloader daemon: " >&2
   esac
   ;;
  status)
   is_alive;
   case "$?" in
      0) echo "Service is Running" >&2
         return 0
      ;;
      2) echo "Service is Not Running" >&2
         return 1
   esac
   ;;
  restart|force-reload)
   echo "Re-starting Jdownloader daemon: " >&2
   do_stop
   case "$?" in
     0|1)
      do_start
      case "$?" in
         0) echo "Re-started OK" >&2
      ;;
         1) echo "log_end_msg 1" >&2
      ;;
         *) echo "log_end_msg 1" >&2
      ;;
      esac
      ;;
     *)
      # Failed to stop
      echo "Failed to stop" >&2
      ;;
   esac
   ;;
  *)
   echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
   exit 3
   ;;
esac
